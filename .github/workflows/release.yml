name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history and tags



      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Verify version matches tag
        run: |
            TAG_VERSION=${GITHUB_REF#refs/tags/v}
            PACKAGE_VERSION=$(python -c "import geosupport; print(geosupport.__version__)")
            if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
                echo "ERROR: Tag version ($TAG_VERSION) doesn't match package version ($PACKAGE_VERSION)"
                exit 1
            fi

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          pip install -e .
          
      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        
      - name: Build package
        run: python -m build
        
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Publish to PyPI on tag push
        # This step will only run if the tag starts with 'v'
        if: startsWith(github.ref, 'refs/tags/')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}